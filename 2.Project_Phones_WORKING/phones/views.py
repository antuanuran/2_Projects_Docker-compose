from .models import Phone

from django.shortcuts import render, redirect

def index(request):
    return redirect('catalog/')

def show_catalog(request):
    # И вот теперь самое интересное: когда мы кликаем по ссылке в шаблоне, например по "названию", то  в браузере мы переходим на страницу: /catalog/?sort=name
    # Т.е. мы были на странице catalog/, а теперь добавилось ?sort=name.
    # Учитывая, что после знака ? - сама страница браузера не меняется, только добавляются симыолы, то мы можем забрать значение после знакак "равно", т.е. после:  ?sort=
    # Для этого мы прописываем запрос request.GET.get и значение после которого нуэно забрать значение, т.е. 'sort' и сохраняем это значение в переменную

    value_sort = request.GET.get('sort')

    # Теперь нам нужно получить все записи базы данных:
    # Затем нам нужно отсортировать эти объекты по параметру, например по прайсу
    # Но при этом нам нужно не прямым текстом написать параметр сортировки, а указать тот, который будет в строке браузера после параметра: ?sort=
    # чтобы когда мы нажимали на кнопку в шаблоне, оттуда брался параметр и записывался в показатель order_by('name')
    # Получается, что когда мы вводим параметр "name", то он есть в Модели и наши объекты сортируются по нему, а когда мы нажимаем на кнопку по минимальному, то вводится в сортировку показатель min или max
    # А такого поля в модели нет и выдает ошибку, поэтому нам нужно сделать так: если при нажатии кнопки получается показатель min, то должно в сортировку вставиться показатель price, если max, то -price

    key_value_sort = {
        'model': 'name',
        'min': 'price',
        'max': '-price'
    }.get(value_sort, 'name')       # Как работает этот код: берется переменная value_sort и проверят - есть ли такой ключ среди всех ключей в словаре: key_value_sort. Если есть, то передает значение по этому клюсу
                                    # Если такого ключа нет, то чтобы не было ошибки оно пусть будет передавать name

    all_str = Phone.objects.order_by(key_value_sort).all()
    context = {'phones': all_str}

    return render(request, 'catalog2.html', context)


def show_product(request, nazvanie):
    # Для чего это нужно: для того, чтобы создать для каждого телефона свою ссылку
    # Передается параметр, который стоит после "catalog/" и используется для проверки в базе данных и берется объект, который имеет такое название

    vibor_ref = Phone.objects.get(slug=nazvanie)        # в поле slug - записывается название которое передалось и делается выборка из баз того объекта, у которого данный слаг есть
    context = {'phone_res': vibor_ref}

    return render(request, 'product2.html', context)



